#include <Arduboy2.h>

Arduboy2 arduboy;
BeepPin1 beep;
const uint8_t PROGMEM girlSmile[] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x38, 0x00, 0x60, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 
0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0xC0, 0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x01, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x0C, 0x00, 0x00, 0x00, 0x60, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 
0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 
0x01, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x20, 0x9F, 0x83, 0x60, 0x10, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0xBF, 0x83, 
0xE2, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x43, 0x34, 0x09, 0x92, 0x08, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x43, 0x20, 0x00, 0x13, 0x88, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x47, 0x00, 
0x30, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x30, 0x00, 0x04, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 
0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x90, 
0x00, 0x72, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x80, 0x01, 0x78, 0x00, 0x14, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0xFC, 
0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
0x80, 0x47, 0xFF, 0x00, 0x04, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x01, 0x80, 0x1F, 0xFF, 0x80, 0x04, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x3F, 
0xFF, 0xE4, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x01, 0x80, 0x7F, 0xFF, 0xFC, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x01, 0x80, 0x7F, 0xFF, 0xFC, 
0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 
0x67, 0xFF, 0xCC, 0x02, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x01, 0x80, 0x67, 0xFF, 0xCC, 0x02, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x67, 0xFF, 
0xCC, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 
0x00, 0x6F, 0xFF, 0xDC, 0x03, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x01, 0x00, 0x67, 0xFF, 0xCE, 0x03, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 
0xFF, 0xFE, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x02, 0x00, 0x7F, 0xFF, 0xFE, 0x07, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x02, 0x14, 0xFF, 0xFF, 0xFE, 
0x91, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x8D, 
0xFF, 0xFF, 0xFE, 0xD1, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x02, 0x0D, 0xFF, 0xFF, 0xFE, 0xE0, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x02, 0x0C, 0xFF, 0xFF, 
0xFE, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x0C, 0xFF, 0x7D, 0xFC, 0x60, 0x80, 0x00, 0x00, 
0x00, 0x00, 0x04, 0x00, 0x7F, 0x83, 0xF8, 0x00, 
0x80, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x7F, 
0xFF, 0xF8, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 
0x0C, 0x00, 0x1F, 0xFF, 0xE0, 0x00, 0x40, 0x00, 
0x00, 0x00, 0x00, 0x08, 0x00, 0x0F, 0xFF, 0xE0, 
0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 
0x0F, 0xFF, 0xE0, 0x00, 0x40, 0x00, 0x00, 0x00, 
0x00, 0x04, 0x00, 0x07, 0xFF, 0x80, 0x02, 0x20, 
0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x07, 0xFF, 
0x80, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x18, 
0x00, 0x07, 0xFF, 0x80, 0x00, 0x30, 0x00, 0x00, 
0x00, 0x00, 0x32, 0x00, 0x0F, 0xFF, 0xC0, 0x00, 
0x10, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x0F, 
0xFF, 0xC0, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 
0x60, 0x00, 0x1F, 0xFF, 0xE0, 0x00, 0x40, 0x00, 
0x00, 0x00, 0x00, 0x41, 0x80, 0x3F, 0xFF, 0xF0, 
0x04, 0x48, 0x00, 0x00, 0x00, 0x00, 0x49, 0x83, 
0xFF, 0xFF, 0xFF, 0x02, 0x08, 0x00, 0x00, 0x00, 
0x00, 0x49, 0x03, 0xFF, 0xFF, 0xFF, 0x02, 0x08, 
0x00, 0x00, 0x00, 0x00, 0x84, 0x03, 0xFF, 0xFF, 
0xFF, 0x00, 0xE8, 0x00, 0x00, 0x00, 0x00, 0xBC, 
0x03, 0xFF, 0xFF, 0xFF, 0x80, 0xF4, 0x00, 0x00, 
0x00, 0x01, 0xFC, 0x03, 0xFF, 0xFF, 0xFF, 0x84, 
0xFE, 0x00, 0x00, 0x00, 0x01, 0xFC, 0x63, 0xFF, 
0xFF, 0xFF, 0x88, 0xF8, 0x00, 0x00, 0x00, 0x00, 
0xFC, 0x63, 0xFF, 0xFF, 0xFF, 0x98, 0x7D, 0x00, 
0x00, 0x00, 0x02, 0xFC, 0x73, 0xFF, 0xFF, 0xFF, 
0x89, 0x7D, 0x00, 0x00, 0x00, 0x03, 0xFE, 0x13, 
0xFF, 0xFF, 0xFF, 0x40, 0x7F, 0x80, 0x00, 0x00, 
0x07, 0xF8, 0x0B, 0xFF, 0xFF, 0xFF, 0x50, 0x7F, 
0x80, 0x00, 0x00, 0x05, 0xFC, 0x0F, 0xFF, 0xFF, 
0xFF, 0xE0, 0x7E, 0x80, 0x00, 0x00, 0x05, 0xFC, 
0x0F, 0xFF, 0xFF, 0xFE, 0xE0, 0x7E, 0x80, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00};

bool controlsDisplaying = true;
bool creditsDisplaying = true;

void setup() {
  arduboy.begin();
  beep.begin();
  arduboy.setFrameRate(60);
}

void loop() {
  // pause render until it's time for the next frame
  if (!(arduboy.nextFrame()))
    return;
  arduboy.audio.enabled();
  beep.timer();
  arduboy.pollButtons();
  arduboy.clear();

  arduboy.drawSlowXYBitmap(20, 0, girlSmile, 88, 64, WHITE);

/*
  if(creditsDisplaying){
    arduboy.drawSlowXYBitmap(0, 0, credits, 128, 128, WHITE);

    if(arduboy.pressed(A_BUTTON) || arduboy.pressed(B_BUTTON) || arduboy.pressed(UP_BUTTON) || arduboy.pressed(LEFT_BUTTON) || arduboy.pressed(RIGHT_BUTTON)|| arduboy.pressed(DOWN_BUTTON)){
      creditsDisplaying = false;
    }
  }
  else if(controlsDisplaying){
    arduboy.drawSlowXYBitmap(0, 0, controls, 128, 128, WHITE);

    if(arduboy.pressed(A_BUTTON) || arduboy.pressed(B_BUTTON) || arduboy.pressed(UP_BUTTON) || arduboy.pressed(LEFT_BUTTON) || arduboy.pressed(RIGHT_BUTTON)|| arduboy.pressed(DOWN_BUTTON)){
      controlsDisplaying = false;
    }
  }
  else{
    if (arduboy.pressed(UP_BUTTON)) {
        if (arduboy.pressed(A_BUTTON)) {
          beep.tone(beep.freq(1175.000));
        } else if (arduboy.pressed(B_BUTTON)) {
          beep.tone(beep.freq(1318.500));
        }
        else{
          beep.tone(beep.freq(1318.500));
        }
        
        arduboy.drawSlowXYBitmap(0, 0, mouthOpen, 128, 128, WHITE);
    } else if (arduboy.pressed(DOWN_BUTTON)) {
        if (arduboy.pressed(A_BUTTON)) {
           beep.tone(beep.freq(698.500));
        } else if (arduboy.pressed(B_BUTTON)) {
           beep.tone(beep.freq(784.000));
        }
        else{
          beep.tone(beep.freq(740.000));
        }
        
      arduboy.drawSlowXYBitmap(0, 0, mouthOpen, 128, 128, WHITE);
    } else if (arduboy.pressed(LEFT_BUTTON)) {
        if (arduboy.pressed(A_BUTTON)) {
           beep.tone(beep.freq(831.000));
        } else if (arduboy.pressed(B_BUTTON)) {
           beep.tone(beep.freq(988.000));
        }
        else{
          beep.tone(beep.freq(880.000));
        }
        
      arduboy.drawSlowXYBitmap(0, 0, mouthOpen, 128, 128, WHITE);
    } else if (arduboy.pressed(RIGHT_BUTTON)) {
        if (arduboy.pressed(A_BUTTON)) {
           beep.tone(beep.freq(1046.500));
        } else if (arduboy.pressed(B_BUTTON)) {
           beep.tone(beep.freq(1046.500));
        }
        else{
          beep.tone(beep.freq(1046.500));
        }
        
      arduboy.drawSlowXYBitmap(0, 0, mouthOpen, 128, 128, WHITE);
    }
    else{
      arduboy.drawSlowXYBitmap(0, 0, mouthClosed, 128, 128, WHITE);
      beep.noTone();
    }
  }
  */
  arduboy.display();
}
